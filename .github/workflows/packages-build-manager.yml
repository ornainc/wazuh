name: Build Wazuh Manager Packages - DEB|RPM - amd64|arm64
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Wazuh branch used while building a package'
        required: false
        default: master
      arch:
        type: choice
        description: 'Architecture of the package [amd64, arm64]'
        required: true
        options: 
          - amd64
          - arm64
      package-format:
        type: choice
        description: 'Package format [deb, rpm]'
        required: true
        options: 
          - deb
          - rpm
      release-package-format:
        type: choice
        description: 'Build packages with release format'
        required: false
        options: 
          - release-package
      runner-machine:
        type: choice
        description: 'Required runner type to build the package'
        required: true
        options: 
          - ubuntu-latest
          - self-hosted-arm

  workflow_call:
    inputs:
      branch:
        description: 'Wazuh branch used while building a package'
        required: false
        default: master
        type: string
      arch:
        type: string
        description: 'Architecture of the package [amd64, arm64]'
        required: true
      package-format:
        type: string
        description: 'Package format [deb, rpm]'
        required: true
      release-package-format:
        type: string
        description: 'Build packages with release format'
        required: false
      runner-machine:
        type: string
        description: 'Required runner type to build the package'
        required: true

jobs:
  Build-manager-packages:
    runs-on: ${{ inputs.runner-machine }} 
    name: Build ${{ github.event.inputs.package }} wazuh-manager on ${{ github.event.inputs.arch }}

    steps:
      - name: Cancel previous runs
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_after_successful_duplicate: 'false'

      - uses: actions/checkout@v4
        
      - name: Set tag and container name
        run: |
          VERSION=$(sed 's/^v\([0-9]*\.[0-9]*\.[0-9]*\)/\1/' $GITHUB_WORKSPACE/src/VERSION)
          if [ "${{ github.event.inputs.branch }}" == "master" ]; then echo "TAG=$VERSION" >> $GITHUB_ENV;
          else echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV; fi
          echo "CONTAINER_NAME=${{ github.event.inputs.package-format }}_manager_builder_${{ github.event.inputs.arch }}" >> $GITHUB_ENV

      - name: Download docker image for package building
        run: |
          bash $GITHUB_WORKSPACE/.github/actions/ghcr-pull-and-push/pull_image_from_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} $CONTAINER_NAME ${{ env.TAG }}

      - name: Build ${{ github.event.inputs.package }} wazuh-manager on ${{ github.event.inputs.arch }}
        working-directory: /packages
        run: |
          REVISION=$( echo ${{ github.head_ref }} | sed 's/-/./g; s/\//./g' )
          bash generate_package.sh -b ${{ github.event.inputs.branch }} -j $(nproc)-t manager -s /tmp -a ${{ github.event.inputs.arch }} --dont-build-docker --tag ${{ env.TAG }} -r $REVISION --${{ github.event.inputs.release-package-format }} --package-format ${{ github.event.inputs.package-format }} 

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_SECRET_KEY }}
          aws-region: us-east-1

      - name: Upload package to S3
        run: |
          aws s3 cp /tmp/*manager* s3://packages-dev.internal.wazuh.com/development/wazuh/
