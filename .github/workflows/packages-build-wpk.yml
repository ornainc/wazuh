name: Packages - Build WPK packages
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name of the Docker image to be downloaded (Use developer to set branch name. Use auto to set src/VERSION content)'
        required: false
        default: auto
      linux_branch:
        description: 'Branch name for compiling the Linux package'
        required: false
      windows_package:
        description: 'Link to download package or package name in S3'
        required: false
      macos_package:
        description: 'Link to download package or package name in S3'
        required: false
      revision:
        description: 'Revision used to naming WPK package'
        required: false
        default: 1

  workflow_call:

jobs:
  WPK-generation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, macos]
        arch: [amd64]
      fail-fast: false

    steps:      
      - name: Cancel previous runs
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_after_successful_duplicate: 'false'

      - uses: actions/checkout@v4

      - name: Set WPK name, CONTAINER_NAME and TAG
        run: |
          VERSION=$(sed 's/v\([0-9]*\.[0-9]*\.[0-9]*\)/\1/' $GITHUB_WORKSPACE/src/VERSION)
          if [ "${{ github.event.inputs.tag }}" == "auto" ]; then echo "TAG=$VERSION" >> $GITHUB_ENV;
          elif [ "${{ github.event.inputs.tag }}" == "developer" ]; then echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV;
          else echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV; fi
          COMMIT_HASH="$(curl -s https://api.github.com/repos/wazuh/wazuh/commits/${{ github.ref_name }} | grep '"sha"' | head -n 1| cut -d '"' -f 4 | cut -c 1-7)"
          echo "WPK_NAME=wazuh-wpk_${VERSION}-${{ github.event.inputs.revision }}_${{ matrix.os }}_${{ matrix.arch }}_${COMMIT_HASH}.wpk" >> $GITHUB_ENV
          if [ "${{ matrix.os }}" == "linux" ]; then echo "CONTAINER_NAME=linux_wpk_builder_x86_64" >> $GITHUB_ENV; else echo "CONTAINER_NAME=common_wpk_builder" >> $GITHUB_ENV; fi

      - name: Download docker image for WPK building
        run: |
          bash $GITHUB_WORKSPACE/.github/actions/ghcr-pull-and-push/pull_image_from_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} $CONTAINER_NAME ${{ env.TAG }}

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_SECRET_KEY }}
          aws-region: us-east-1

      - name: Get secrets by name
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            WPK_PRIVATE_KEY,${{ secrets.CI_AWS_WPK_PRIVATE_KEY_SECRET_NAME }}
            WPK_CERT,${{ secrets.CI_AWS_WPK_CERT_SECRET_NAME }}

      - name: Build Linux WPK
        if: matrix.os == 'linux' && github.event.inputs.linux_branch != ''
        working-directory: packages/wpk
        run: |
          bash generate_wpk_package.sh -t linux --dont-build-docker --tag ${{ env.TAG }} -b ${{ github.event.inputs.linux_branch }} -d /tmp --aws-wpk-key WPK_PRIVATE_KEY --aws-wpk-cert WPK_CERT -o ${{ env.WPK_NAME }}
          echo "UPLOAD_READY=yes" >> $GITHUB_ENV

      - name: Build Windows WPK
        if: matrix.os == 'windows' && github.event.inputs.windows_package != ''
        working-directory: packages/wpk
        run: |
          if [[ "${{ github.event.inputs.windows_package }}" =~ ^http.* ]]; then curl -o wazuh-agent.msi ${{ github.event.inputs.windows_package }}; else aws s3 cp s3://packages-dev.internal.wazuh.com/development/wazuh/4.x/main/packages/${{ github.event.inputs.windows_package }} ./wazuh-agent.msi; fi
          bash generate_wpk_package.sh -t windows --dont-build-docker --tag ${{ env.TAG }} -b ${{ github.ref_name }} -d /tmp --aws-wpk-key WPK_PRIVATE_KEY --aws-wpk-cert WPK_CERT -o ${{ env.WPK_NAME }} -pn ./wazuh-agent.msi
          echo "UPLOAD_READY=yes" >> $GITHUB_ENV

      - name: Build MacOS WPK
        if: matrix.os == 'macos' && github.event.inputs.macos_package != ''
        working-directory: packages/wpk
        run: |
          if [[ "${{ github.event.inputs.macos_package }}" =~ ^http.* ]]; then curl -o wazuh-agent.pkg ${{ github.event.inputs.macos_package }}; else aws s3 cp s3://packages-dev.internal.wazuh.com/development/wazuh/4.x/main/packages/${{ github.event.inputs.macos_package }} ./wazuh-agent.pkg; fi
          bash generate_wpk_package.sh -t macos --dont-build-docker --tag ${{ env.TAG }} -b ${{ github.ref_name }} -d /tmp --aws-wpk-key WPK_PRIVATE_KEY --aws-wpk-cert WPK_CERT -o ${{ env.WPK_NAME }} -pn ./wazuh-agent.pkg
          echo "UPLOAD_READY=yes" >> $GITHUB_ENV

      - name: Upload WPK package to S3
        if: env.UPLOAD_READY == 'yes'
        run: |
          aws s3 cp /tmp/${{ env.WPK_NAME }} s3://packages-dev.internal.wazuh.com/development/wazuh/4.x/main/packages/
