name: Package - Upload Docker images - DEB and RPM - amd64
on:
  pull_request:
    paths:
      - 'packages/**'
    types:
      - opened
      - synchronize
      - closed
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name of the Docker image to be uploaded (Use developer to set branch name. Use auto to set src/VERSION content)'
        required: false
        default: auto

jobs:
  Upload-package-building-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - CONTAINER_NAME: deb_manager_builder_amd64
            DOCKERFILE_PATH: packages/debs/amd64/manager
            DISTRO: deb
          - CONTAINER_NAME: rpm_manager_builder_amd64
            DOCKERFILE_PATH: packages/debs/amd64/manager
            DISTRO: rpm
      fail-fast: false
    
    steps:
      - name: Cancel previous runs
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_after_successful_duplicate: 'false'

      - uses: actions/checkout@v4

      - name: Get changed files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            deb_manager_amd64:
              - 'packages/debs/amd64/manager/**'
              - 'packages/build.sh'
              - 'packages/generate_package.sh'
            rpm_manager_amd64:
              - 'packages/debs/amd64/agent/**'
              - 'packages/build.sh'
              - 'packages/generate_package.sh'

      - name: Copy build.sh and utils to Dockerfile path
        run: |
          cp $GITHUB_WORKSPACE/packages/build.sh $GITHUB_WORKSPACE/${{ matrix.DOCKERFILE_PATH }}
          cp $GITHUB_WORKSPACE/packages/${{ matrix.DISTRO }}/utils/* $GITHUB_WORKSPACE/${{ matrix.DOCKERFILE_PATH }}
      
      - name: Set tag
        run:
          VERSION=$(sed 's/\([0-9]*\.[0-9]*\.[0-9]*\)\.[0-9]*/\1/' $GITHUB_WORKSPACE/src/VERSION)
          if [ "${{ github.event.inputs.tag }}" == "auto" ]; then echo "TAG=$VERSION" >> $GITHUB_ENV;
          elif [ "${{ github.event.inputs.tag }}" == "developer" ]; then echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV;
          else echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV;

      - name: Build and push image ${{ matrix.CONTAINER_NAME }} with tag ${{ env.TAG }} to Github Container Registry
        if: ( steps.changes.outputs.deb_manager_amd64 == 'true' && matrix.CONTAINER_NAME == 'deb_manager_builder_amd64') || ( steps.changes.outputs.rpm_manager_amd64 == 'true' && matrix.CONTAINER_NAME == 'rpm_manager_builder_amd64' )
        run:
          bash $GITHUB_WORKSPACE/.github/actions/ghcr-pull-and-push/build_and_push_image_to_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} ${{matrix.CONTAINER_NAME}} ${{ matrix.DOCKERFILE_PATH }} ${{ env.TAG }}

  Build-packages-amd64:
    needs: Upload-package-building-images
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/packages-build-amd64.yml
    secrets: inherit