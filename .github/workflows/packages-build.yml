name: Build Wazuh Packages - DEB|RPM - amd64 and i386
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name of the Docker image to be downloaded (Use developer to set branch name. Use auto to set src/VERSION content)'
        required: false
        default: auto
      linux_branch:
        description: 'Branch name for compiling the Linux package'
        required: false
      revision:
        description: 'Revision used to naming wazuh-agent package'
        required: false
        default: 1
      deb_images:
        description: 'Build deb packages for all architecture'
        required: false
        default: 1

jobs:
  Wazuh-agent-package-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PACKAGE_FORMAT: [rpm, deb]
        ARCHITECTURE : [amd64, i386]

      fail-fast: false

    steps:
      - name: Cancel previous runs
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_after_successful_duplicate: 'false'

      - uses: actions/checkout@v3

      - name: Set tag, package_format, and container name
        run: |
          VERSION=$(sed 's/\([0-9]*\.[0-9]*\.[0-9]*\)/\1/' $GITHUB_WORKSPACE/src/VERSION)
          if [ "${{ github.event.inputs.tag }}" == "auto" ]; then echo "TAG=$VERSION" >> $GITHUB_ENV;
          elif [ "${{ github.event.inputs.tag }}" == "developer" ]; then echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV;
          else echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV; fi
          echo "CONTAINER_NAME=pkg_${{ matrix.PACKAGE_FORMAT }}_agent_builder_${{ matrix.ARCHITECTURE }}" >> $GITHUB_ENV
          echo "PACKAGE_FORMAT=${{ matrix.PACKAGE_FORMAT }}" >> $GITHUB_ENV

      - name: Download docker image for package building
        run: |
          bash $GITHUB_WORKSPACE/.github/actions/ghcr-pull-and-push/pull_image_from_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} $CONTAINER_NAME ${{ env.TAG }}

      - name: Build the ${{ matrix.ARCHITECTURE }} ${{ matrix.PACKAGE_FORMAT }} Wazuh agent package
        working-directory: ./packages
        run: |
          REVISION=$( echo ${{ github.event.inputs.revision }} )
          bash generate_package.sh -b ${{ github.event.inputs.linux_branch }} -t agent -a ${{ matrix.ARCHITECTURE }} -j 2 --dont-build-docker --tag ${{ env.TAG }} -r $REVISION --package-format ${{ env.PACKAGE_FORMAT }}
          echo "PACKAGE_NAME=$(ls ./output | grep ".deb\|.rpm" | head -n 1)" >> $GITHUB_ENV

      - name: Upload Wazuh agent ${{ matrix.ARCHITECTURE }} package as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ${{github.workspace}}/packages/output/${{ env.PACKAGE_NAME }}
          if-no-files-found: error
