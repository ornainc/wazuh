name: Build WPK packages
on:
  pull_request:
    paths:
      - 'packages/wpk/**'
  workflow_dispatch:
  workflow_call:

jobs:
  WPK-generation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, macos]
      fail-fast: false

    steps:      
      - name: Cancel previous runs
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_after_successful_duplicate: 'false'

      - uses: actions/checkout@v3

      - name: Get changed files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |            
            linux_x86_64_image:
              - 'packages/wpk/linux/x86_64/**'
              - 'packages/wpk/wpkpack.py'
              - 'packages/wpk/run.sh'
            common_image:
              - 'packages/wpk/common/**'
              - 'packages/wpk/wpkpack.py'
              - 'packages/wpk/run.sh'
            wpk_generation:
              - 'packages/wpk/generate_wpk_package.sh'
              - 'packages/wpk/wpkpack.py'
              - 'packages/wpk/run.sh'

      - name: Set WPK name, CONTAINER_NAME and TAG
        if : steps.changes.outputs.wpk_generation == 'true'
        run: |
          MAJOR=$(sed 's/\([0-9]*\.[0-9]*\)\.[0-9]*/\1/' $GITHUB_WORKSPACE/src/VERSION)
          if [ "${{ steps.changes.outputs.linux_x86_64_image }}" == "true" ] || [ "${{ steps.changes.outputs.common_image }}" == "true" ]; then echo "TAG=${{ github.head_ref }}" >> $GITHUB_ENV; else echo "TAG=$MAJOR" >> $GITHUB_ENV ; fi
          echo "PACKAGE_NAME=${{ matrix.os }}Agent.${{ github.head_ref }}.wpk" >> $GITHUB_ENV
          if [ "${{ matrix.os }}" == "linux" ]; then echo "CONTAINER_NAME=linux_wpk_builder_x86_64" >> $GITHUB_ENV ; else echo "CONTAINER_NAME=common_wpk_builder" >> $GITHUB_ENV ; fi

      - name: Download docker image for WPK building
        if : steps.changes.outputs.wpk_generation == 'true'
        run: |
          bash $GITHUB_WORKSPACE/.github/actions/ghcr-pull-and-push/pull_image_from_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} $CONTAINER_NAME ${{ env.TAG }}

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_SECRET_KEY }}
          aws-region: us-east-1

      - name: Get secrets by name
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            AWS_WPK_PRIVATE_KEY,${{ secrets.CI_AWS_WPK_PRIVATE_KEY_SECRET_NAME }}
            AWS_WPK_CERT,${{ secrets.CI_AWS_WPK_CERT_SECRET_NAME }}

      - name: Build Linux WPK
        if: matrix.os == 'linux' && (steps.changes.outputs.wpk_generation == 'true' || steps.changes.outputs.linux_x86_64_image == 'true')
        working-directory: packages/wpk
        run: |
          bash generate_wpk_package.sh -t linux --dont-build-docker -b ${{ github.head_ref }} -d /tmp --aws-wpk-key AWS_WPK_PRIVATE_KEY --aws-wpk-cert AWS_WPK_CERT -o ${{ env.PACKAGE_NAME }}

      - name: Build Windows WPK
        if: matrix.os == 'windows' && (steps.changes.outputs.wpk_generation == 'true' || steps.changes.outputs.common_image == 'true')
        working-directory: packages/wpk
        run: |
          curl -O https://packages.wazuh.com/4.x/windows/wazuh-agent-4.7.3-1.msi
          bash generate_wpk_package.sh -t windows --dont-build-docker -b ${{ github.head_ref }} -d /tmp --aws-wpk-key AWS_WPK_PRIVATE_KEY --aws-wpk-cert AWS_WPK_CERT -o ${{ env.PACKAGE_NAME }} -pn ./wazuh-agent-4.7.3-1.msi
          
      - name: Build MacOS WPK
        if: matrix.os == 'macos' && (steps.changes.outputs.wpk_generation == 'true' || steps.changes.outputs.common_image == 'true')
        working-directory: packages/wpk
        run: |
          curl -O https://packages.wazuh.com/4.x/macos/wazuh-agent-4.7.3-1.pkg
          bash generate_wpk_package.sh -t macos --dont-build-docker -b ${{ github.head_ref }} -d /tmp --aws-wpk-key AWS_WPK_PRIVATE_KEY --aws-wpk-cert AWS_WPK_CERT -o ${{ env.PACKAGE_NAME }} -pn ./wazuh-agent-4.7.3-1.pkg

      - name: Upload WPK package as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: /tmp/${{ env.PACKAGE_NAME }}
          if-no-files-found: error
