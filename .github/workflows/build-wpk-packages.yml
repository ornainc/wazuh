name: Build WPK packages
on:
  pull_request:
    paths:
      - 'packages/wpk/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version to download (MacOS/Windows) or compile (Linux)'
        required: true
      link:
        description: 'Link to download package for MacOS or Windows (Will overwrite version parameter)'
        required: false

  workflow_call:

jobs:
  WPK-generation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, macos]
      fail-fast: false

    steps:      
      - name: Cancel previous runs
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_after_successful_duplicate: 'false'

      - uses: actions/checkout@v3

      - name: Get changed files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |            
            linux_x86_64_image:
              - 'packages/wpk/linux/x86_64/**'
              - 'packages/wpk/wpkpack.py'
              - 'packages/wpk/run.sh'
            common_image:
              - 'packages/wpk/common/**'
              - 'packages/wpk/wpkpack.py'
              - 'packages/wpk/run.sh'
            wpk_generation:
              - 'packages/wpk/generate_wpk_package.sh'
              - 'packages/wpk/wpkpack.py'
              - 'packages/wpk/run.sh'

      - name: Set WPK name, CONTAINER_NAME and TAG
        if : steps.changes.outputs.wpk_generation == 'true'
        run: |
          MAJOR=$(sed 's/\([0-9]*\.[0-9]*\)\.[0-9]*/\1/' $GITHUB_WORKSPACE/src/VERSION)
          if [ "${{ steps.changes.outputs.linux_x86_64_image }}" == "true" ] || [ "${{ steps.changes.outputs.common_image }}" == "true" ]; then echo "TAG=${{ github.ref }}" >> $GITHUB_ENV; else echo "TAG=$MAJOR" >> $GITHUB_ENV; fi
          echo "PACKAGE_NAME=${{ matrix.os }}Agent.${{ github.ref }}.wpk" >> $GITHUB_ENV
          if [ "${{ matrix.os }}" == "linux" ]; then echo "CONTAINER_NAME=linux_wpk_builder_x86_64" >> $GITHUB_ENV; else echo "CONTAINER_NAME=common_wpk_builder" >> $GITHUB_ENV; fi

      - name: Download docker image for WPK building
        if : steps.changes.outputs.wpk_generation == 'true'
        run: |
          bash $GITHUB_WORKSPACE/.github/actions/ghcr-pull-and-push/pull_image_from_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} $CONTAINER_NAME ${{ env.TAG }}

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_SECRET_KEY }}
          aws-region: us-east-1

      - name: Get secrets by name
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            WPK_PRIVATE_KEY,${{ secrets.CI_AWS_WPK_PRIVATE_KEY_SECRET_NAME }}
            WPK_CERT,${{ secrets.CI_AWS_WPK_CERT_SECRET_NAME }}

      - name: Build Linux WPK
        if: matrix.os == 'linux' && (steps.changes.outputs.wpk_generation == 'true' || steps.changes.outputs.linux_x86_64_image == 'true')
        working-directory: packages/wpk
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then BRANCH_NAME=${{ github.event.inputs.version }}; 
          else BRANCH_NAME=${{ github.ref }}; fi
          bash generate_wpk_package.sh -t linux --dont-build-docker --tag ${{ env.TAG }} -b $BRANCH_NAME -d /tmp --aws-wpk-key WPK_PRIVATE_KEY --aws-wpk-cert WPK_CERT -o ${{ env.PACKAGE_NAME }}

      - name: Build Windows WPK
        if: matrix.os == 'windows' && (steps.changes.outputs.wpk_generation == 'true' || steps.changes.outputs.common_image == 'true')
        working-directory: packages/wpk
        run: |
          if [ -n "${{ github.event.inputs.link }}" ]; then curl -o package.msi ${{ github.event.inputs.link }};
          elif [ -n "${{ github.event.inputs.version }}" ]; then curl -o package.msi https://packages.wazuh.com/4.x/windows/wazuh-agent-${{ github.event.inputs.version }}-1.msi;
          else curl -o package.msi https://packages.wazuh.com/4.x/windows/wazuh-agent-$MAJOR-1.msi; fi
          bash generate_wpk_package.sh -t windows --dont-build-docker --tag ${{ env.TAG }} -b ${{ github.ref }} -d /tmp --aws-wpk-key WPK_PRIVATE_KEY --aws-wpk-cert WPK_CERT -o ${{ env.PACKAGE_NAME }} -pn ./package.msi
          
      - name: Build MacOS WPK
        if: matrix.os == 'macos' && (steps.changes.outputs.wpk_generation == 'true' || steps.changes.outputs.common_image == 'true')
        working-directory: packages/wpk
        run: |
          if [ -n "${{ github.event.inputs.link }}" ]; then curl -o package.pkg ${{ github.event.inputs.link }};
          elif [ -n "${{ github.event.inputs.version }}" ]; then curl -o package.pkg https://packages.wazuh.com/4.x/macos/wazuh-agent-${{ github.event.inputs.version }}-1.intel64.pkg;
          else curl -o package.pkg https://packages.wazuh.com/4.x/macos/wazuh-agent-$MAJOR-1.intel64.pkg; fi
          bash generate_wpk_package.sh -t macos --dont-build-docker --tag ${{ env.TAG }} -b ${{ github.ref }} -d /tmp --aws-wpk-key WPK_PRIVATE_KEY --aws-wpk-cert WPK_CERT -o ${{ env.PACKAGE_NAME }} -pn ./package.pkg

      - name: Upload WPK package to S3
        run: |
          aws s3 cp /tmp/${{ env.PACKAGE_NAME }} s3://packages-dev.internal.wazuh.com/development/wazuh/
