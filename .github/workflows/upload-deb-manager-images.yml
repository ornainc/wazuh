name: Upload package creation Docker images - DEB
on:
  pull_request:
    paths:
      - 'packages/debs/**'
    types:
      - opened
      - synchronize
      - closed
  workflow_dispatch:

jobs:
  Upload-deb-manager-package-building-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu_latest
            CONTAINER_NAME: deb_manager_builder_arm64
            DOCKERFILE_PATH: packages/debs/arm64
      fail-fast: false

    steps:
        - uses: actions/checkout@v4
        - uses: uraimo/run-on-arch-action@v2
          name: Build artifact
          id: build
          with:
            arch: ${{ matrix.arch }}
            distro: ${{ matrix.distro }}
  
            # Not required, but speeds up builds
            githubToken: ${{ github.token }}
  
            # Create an artifacts directory
            setup: |
              mkdir -p "${PWD}/artifacts"
  
            # Mount the artifacts directory as /artifacts in the container
            dockerRunArgs: |
              --volume "${PWD}/artifacts:/artifacts"
              --privileged

            # Pass some environment variables to the container
            env: | # YAML, but pipe character is necessary
              artifact_name: git-${{ matrix.distro }}_${{ matrix.arch }}
  
            # The shell to run commands with in the container
            shell: /bin/sh
  
            # Produce a binary artifact and place it in the mounted volume
            run: |
              apt-get update
              apt-get install ca-certificates curl coreutils -y
              install -m 0755 -d /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
              chmod a+r /etc/apt/keyrings/docker.asc
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
              apt-get update
              apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
              dockerd &
              git clone https://github.com/wazuh/wazuh.git
              cd wazuh
              git checkout 22320-migrate-and-adapt-the-wazuh-manager-subsystem
              cd packages
              ./generate_package.sh -b 22320-migrate-and-adapt-the-wazuh-manager-subsystem -s /artifacts -t agent -a arm64 -r test --package-format deb
  
        - name: Show the artifact
          # Items placed in /artifacts in the container will be in
          # ${PWD}/artifacts on the host.
          run: |
            ls -la "${PWD}/artifacts"

